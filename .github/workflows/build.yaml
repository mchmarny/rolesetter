name: build

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Image name (e.g. my-image)'
        required: true
        type: string
      go_version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.25.0'
    outputs:
      digest:
        value: ${{ jobs.build.outputs.digest }}

permissions:
  contents: read

jobs:
  build:
    outputs:
      digest: ${{ steps.image.outputs.digest }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:

    - name: Setup Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.5.0
      with:
        go-version: '${{ inputs.go_version }}'
    - run: go version

    - name: Checkout Code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

    - name: Cache Go Modules
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4.2.4
      with:
        path: |
          ~/.cache/go-build
          # This should match the location of go.sum
          go.sum
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Install ko
      uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d  # v0.9

    - name: Authenticate ko
      run: |
        ko login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Show effective permissions
      run: |
        echo "actor=${{ github.actor }}"
        echo "owner=${{ github.repository_owner }}"
        echo "ref=${{ github.ref }}"
        echo "repo=${{ github.repository }}"

    - name: Verify Docker auth entry for ghcr.io
      run: |
        cat ~/.docker/config.json | jq '.auths["ghcr.io"] | has("auth")'

    - name: Build Image
      id: image
      env:
        KO_DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
        GOFLAGS: "-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}"
      run: |
        set -euo pipefail
        ko build main.go \
          --image-refs .digest \
          --bare \
          --tags ${{ env.RELEASE_VERSION }} \
          --tags ${{ github.sha }} \
          --tags latest
        echo "digest=$(cat .digest)" >> "$GITHUB_OUTPUT"
