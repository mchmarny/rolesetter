apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"node-labeler"}}
    creationTimestamp: "2025-10-17T17:49:20Z"
    labels:
      kubernetes.io/metadata.name: node-labeler
    name: node-labeler
    resourceVersion: "1760723360143759017"
    uid: 5895ba92-eb69-445e-bc43-6fdebbe88a10
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"node-role-controller","namespace":"node-labeler"}}
    creationTimestamp: "2025-10-17T17:49:20Z"
    name: node-role-controller
    namespace: node-labeler
    resourceVersion: "1760723360449487019"
    uid: 0cae61bd-e958-40e1-a422-41ee3a574693
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"node-role-labeler"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch","patch","update"]}]}
    creationTimestamp: "2025-10-17T17:49:20Z"
    name: node-role-labeler
    resourceVersion: "1760723360704639019"
    uid: aebe0911-5c66-4431-ba71-9e95e18eda8a
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"node-role-labeler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"node-role-labeler"},"subjects":[{"kind":"ServiceAccount","name":"node-role-controller","namespace":"node-labeler"}]}
    creationTimestamp: "2025-10-17T17:49:20Z"
    name: node-role-labeler
    resourceVersion: "1760723361167119014"
    uid: 046c659c-0741-41da-aa09-c08534ada5a3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: node-role-labeler
  subjects:
  - kind: ServiceAccount
    name: node-role-controller
    namespace: node-labeler
- apiVersion: v1
  data:
    logLevel: info
    roleLabel: nodeGroup
    roleReplace: "false"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"logLevel":"info","roleLabel":"nodeGroup","roleReplace":"false"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"node-role-controller-config","namespace":"node-labeler"}}
    creationTimestamp: "2025-10-17T17:49:21Z"
    name: node-role-controller-config
    namespace: node-labeler
    resourceVersion: "1760723361465903022"
    uid: 4f02912f-c144-4a3b-9758-2e1b10b563b6
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"node-role-controller"},"name":"node-role-controller","namespace":"node-labeler"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"node-role-controller"}},"template":{"metadata":{"labels":{"app":"node-role-controller"}},"spec":{"containers":[{"env":[{"name":"ROLE_LABEL","valueFrom":{"configMapKeyRef":{"key":"roleLabel","name":"node-role-controller-config"}}},{"name":"ROLE_LABEL_REPLACE","valueFrom":{"configMapKeyRef":{"key":"roleReplace","name":"node-role-controller-config"}}},{"name":"LOG_LEVEL","valueFrom":{"configMapKeyRef":{"key":"logLevel","name":"node-role-controller-config"}}}],"image":"ghcr.io/mchmarny/node-role-controller:v0.5.0@sha256:345638126a65cff794a59c620badcd02cdbc100d45f7745b4b42e32a803ff645","livenessProbe":{"httpGet":{"path":"/metrics","port":"metrics"},"initialDelaySeconds":10,"periodSeconds":30,"timeoutSeconds":5},"name":"node-role-controller","ports":[{"containerPort":8080,"name":"metrics"}],"readinessProbe":{"httpGet":{"path":"/metrics","port":"metrics"},"initialDelaySeconds":5,"periodSeconds":10,"timeoutSeconds":5},"resources":{"limits":{"cpu":"250m","memory":"256Mi"},"requests":{"cpu":"50m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"runAsNonRoot":true}}],"restartPolicy":"Always","serviceAccountName":"node-role-controller","terminationGracePeriodSeconds":10,"tolerations":[{"key":"dedicated","value":"system-workload"}]}}}}
    creationTimestamp: "2025-10-17T17:49:21Z"
    generation: 1
    labels:
      app: node-role-controller
    name: node-role-controller
    namespace: node-labeler
    resourceVersion: "1760723377237247000"
    uid: e27a2756-4611-4b72-af05-8991a3f60061
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: node-role-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: node-role-controller
      spec:
        containers:
        - env:
          - name: ROLE_LABEL
            valueFrom:
              configMapKeyRef:
                key: roleLabel
                name: node-role-controller-config
          - name: ROLE_LABEL_REPLACE
            valueFrom:
              configMapKeyRef:
                key: roleReplace
                name: node-role-controller-config
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: logLevel
                name: node-role-controller-config
          image: ghcr.io/mchmarny/node-role-controller:v0.5.0@sha256:345638126a65cff794a59c620badcd02cdbc100d45f7745b4b42e32a803ff645
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: node-role-controller
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: node-role-controller
        serviceAccountName: node-role-controller
        terminationGracePeriodSeconds: 10
        tolerations:
        - key: dedicated
          value: system-workload
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-10-17T17:49:37Z"
      lastUpdateTime: "2025-10-17T17:49:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-10-17T17:49:22Z"
      lastUpdateTime: "2025-10-17T17:49:37Z"
      message: ReplicaSet "node-role-controller-79bf4c4696" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: List
metadata: {}
